#!/bin/bash
# <TAGS>plot time </TAGS>

################################################################################
# INTIAL VARIABLE DEFINITIONS
################################################################################
# for most scripts...
thisprog=`basename "$0"`
allopts=$@
tempfile="temp_"$thisprog #"."$$"."

setplotopts=""
setverb="0"
setclean="1"

################################################################################
# PRINT INSTRUCTIONS IF NO ARGUMENTS ARE GIVEN
################################################################################
if [ $# -lt 1 ]; then
	echo
	echo "--------------------------------------------------------------------------------"
	echo $thisprog": plot data by date (lines)"
	echo "USAGE: $thisprog [in] [cx] [cy] [options]"
	echo "	[in]: input file"
	echo "	[cx]: name of column holding x-values (date, format yyyy/mm/dd"
	echo "	[cy]: name of column holding y-values"
	echo "VALID OPTIONS (defaults in []):"
	echo "	--opt: quoted options for xe-plottable1 [$setplotopts]"
	echo "	--verb: verbose output (0=NO 1=YES) [$setverb]"
	echo "	--clean: remove temporary files (0=NO 1=YES) [$setclean]"
	echo "EXAMPLE: "
	echo "	"$thisprog" data.txt  2>&1|tee log"$thisprog".txt"
	echo "--------------------------------------------------------------------------------"
	echo
	exit
fi


########################################################################################
# INPUT FILE(S) AND REQUIRED ARGUMENT HANDLING
########################################################################################
infile=$1 ; shift
setcx=$1 ; shift
setcy=$1 ; shift

if [ ! -e "$infile" ] ; then { echo ; echo "--- Error ["$thisprog"]: missing file $infile" ; echo ; exit; } ; fi
if [ ! -s "$infile" ] ; then { echo ; echo "--- Error ["$thisprog"]: $infile is empty" ; echo ; exit; } ; fi


########################################################################################
# OPTIONAL ARGUMENT HANDLING
########################################################################################
vs="v:c:" ; vl="cg:,opt:,verb:,clean:"
y=$(getopt -o $vs -l $vl -n "" -- "$@" 2>&1 > /dev/null)
if [ "$y" != "" ] ; then { echo "" ; echo "--- Error ["$thisprog"]"$y ; echo ; exit ; }
else eval set -- $(getopt -o $vs -l $vl -n "" -- "$@") ; fi
while [ $# -gt 0 ] ; do
	case $1 in
		--cg ) setcg=$2 ; shift ;;
		--opt ) setplotopts=$2 ; shift ;;
		-v | --verb ) setverb=$2 ; shift ;;
		-c | --clean ) setclean=$2 ; shift ;;
		-- ) shift ; break ;;
		* ) ;;
	esac
	shift
done
if [ "$setverb" != "0" ] && [ "$setverb" != "1" ] ; then { echo ; echo "--- Error ["$thisprog"]: invalid --verb ($setverb) -  must be 0 or 1" ; echo ; exit; } ; fi
if [ "$setclean" != "0" ] && [ "$setclean" != "1" ] ; then { echo ; echo "--- Error ["$thisprog"]: invalid --clean ($setclean) -  must be 0 or 1" ; echo ; exit; } ; fi

if [ "$setclean" == "1" ] ; then
	if [ "$tempfile" != "" ] ; then rm -f $tempfile* ; fi
	if [ "$progbase1" != "" ] ; then rm -f $progbase1* ; fi
fi

list=$(xe-cut1 $infile $setcx,$setcy -o 1 | tr '\t' ',')
for i in $list ; do
	date1=$(echo $i|cut -f 1 -d ',')
	y=$(echo $i|cut -f 2 -d ',')

	week=$(date --date="$date1" +%V)

	echo $week"	"$y
done | xe-plottable1 stdin $setplotopts
exit










# get the week-number for a date
date --date="2019/01/23" +%V
# get the day-number for a date
date --date="2019/01/23" +%j





################################################################################
# REPORT, CLEANUP AND EXIT
################################################################################
if [ "$setverb" == "1" ] ; then
	end_time=$(date +'%s.%3N')
	s=$(echo $end_time $start_time | awk '{print $1-$2}' )
	m=$(echo $s | awk '{print ($1/60)}')
	echo "	Time to finish job: "$s" seconds = "$m" minutes"
fi
if [ "$setclean" == "1" ] ; then
	if [ "$tempfile" != "" ] ; then rm -f $tempfile* ; fi
fi
exit
